diff --git a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkActivity.java
index 4b1e8adce0c21947d920dfe3e6a6b4fdf8342ae5..37b672f41f2de3cdb3035ea4eb13e895303ec1ad 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkActivity.java
@@ -16,6 +16,11 @@ import org.chromium.chrome.browser.IntentHandler;
 import org.chromium.chrome.browser.SnackbarActivity;
 import org.chromium.components.bookmarks.BookmarkId;
 import org.chromium.components.embedder_support.util.UrlConstants;
+import org.chromium.ui.base.ActivityWindowAndroid;
+import org.chromium.ui.base.IntentRequestTracker;
+
+import org.chromium.ui.modaldialog.ModalDialogManager;
+import org.chromium.components.browser_ui.modaldialog.AppModalPresenter;
 
 /**
  * The activity that displays the bookmark UI on the phone. It keeps a {@link BookmarkManager}
@@ -25,6 +30,7 @@ import org.chromium.components.embedder_support.util.UrlConstants;
 public class BookmarkActivity extends SnackbarActivity {
 
     private BookmarkManager mBookmarkManager;
+    private ActivityWindowAndroid mWindowAndroid;
     static final int EDIT_BOOKMARK_REQUEST_CODE = 14;
     public static final String INTENT_VISIT_BOOKMARK_ID = "BookmarkEditActivity.VisitBookmarkId";
 
@@ -42,8 +48,23 @@ public class BookmarkActivity extends SnackbarActivity {
         mBookmarkManager.updateForUrl(url);
         setContentView(mBookmarkManager.getView());
         BackPressHelper.create(this, getOnBackPressedDispatcher(), mBookmarkManager::onBackPressed);
+
+        final boolean listenToActivityState = true;
+        IntentRequestTracker intentRequestTracker = IntentRequestTracker.createFromActivity(this);
+        mWindowAndroid = new ActivityWindowAndroid(this, listenToActivityState, intentRequestTracker);
+        mWindowAndroid.getIntentRequestTracker().restoreInstanceState(savedInstanceState);
+        mBookmarkManager.setWindow(mWindowAndroid,
+                            new ModalDialogManager(
+                                new AppModalPresenter(this), ModalDialogManager.ModalDialogType.APP));
     }
 
+    @Override
+    protected void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+
+        mWindowAndroid.getIntentRequestTracker().saveInstanceState(outState);
+     }
+
     @Override
     protected void onDestroy() {
         super.onDestroy();
@@ -53,6 +74,7 @@ public class BookmarkActivity extends SnackbarActivity {
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
+        mWindowAndroid.getIntentRequestTracker().onActivityResult(requestCode, resultCode, data);
         if (requestCode == EDIT_BOOKMARK_REQUEST_CODE && resultCode == RESULT_OK) {
             BookmarkId bookmarkId = BookmarkId.getBookmarkIdFromString(data.getStringExtra(
                     INTENT_VISIT_BOOKMARK_ID));
@@ -60,6 +82,14 @@ public class BookmarkActivity extends SnackbarActivity {
         }
     }
 
+    @Override
+    public void onRequestPermissionsResult(
+            int requestCode, String[] permissions, int[] grantResults) {
+        if (mWindowAndroid.handlePermissionResult(requestCode, permissions, grantResults))
+            return;
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+    }
+
     /**
      * @return The {@link BookmarkManager} for testing purposes.
      */
